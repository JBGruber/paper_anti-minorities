---
title: 3_annotation
author: Johannes B. Gruber
date: today
format:
  html:
    toc: true
    toc_depth: 3
    toc_float: true
    number_sections: true
    embed-resources: true
---

# Introduction

We use generative AI, specifically llama3.1:8b-instruct-q8_0 through Ollama and rollama to annotate the data.


## Packages

I use `rollama` to communicate with Ollama, running the annotation locally:

```{r setup}
#| message: false
library(tidyverse)
library(rollama)
# disply Ollama version
rollama::ping_ollama()
start <- Sys.time() # note start time for later
# for testing the workflow, I run this notebook on a smaller sample
prototype <- FALSE
```

## Data

```{r}
paragraphs <- readRDS("data/lgbtq_party_paragraphs.rds") |> 
  # I remove very long paragrahps, which are usually tables, lists or live ticker logs
  filter(nchar(text) < 1000)

if (prototype) {
  set.seed(1)
  paragraphs <- paragraphs |> 
    sample_n(20)
}
```


# Main

I use this prompt to annotate all data at once.
I tried a number of different ways and this is not only the one that gives us the best results, it's also the most straightforward:

```{r}
prompt <- "
Analyze the following paragraph and answer these questions about it:

1. Is the statement referring to LGBTQ+ rights?

If yes:

2. Is the statement predominantely positive, neutral, or negative about LGBTQ+ rights? (Choose one)
3. Is the statement referring to immigrants or ethnic minorities?

If yes:

4. Is the statement predominantely positive, neutral, or negative about immigrants or ethnic minorities? (Choose one)

5. Which political party, or member thereof, is mentioned in the statement?

Return answers in the following format:
{\"1_lgbtq\": \"<Yes/No>\", \"2_evaluation_lgbtq\": \"<positive/neutral/negative or NA>\", \"3_immigration\": \"<Yes/No>\", \"4_evaluation_minority\": \"<positive/neutral/negative or NA>\", \"5_party\": \"<Party Name or NA>\"}
"
```

I use this function to add examples (shots) for the model to 'understand' the task better.
The examples are made up.

```{r}
make_query <- function(txt) {
  map(txt, function(t) {
    tribble(
      ~role, ~content,
      "system", prompt,
      "user", "As a society, we have made significant progress on LGBTQ+ rights, ensuring that every individual, regardless of their gender or sexuality, is treated equally under the law. Labour is committed to continuing this work for a more inclusive future.",
      "assistant", "{\"1_lgbtq\": \"Yes\", \"2_evaluation_lgbtq\": \"positive\", \"3_immigration\": \"No\", \"4_evaluation_minority\": NA, \"2_party\": \"Labour\"}",
      "user", "The Tories stand firmly in support of LGBTQ+ rights. However, we must acknowledge that certain immigrant groups hold values that conflict with our commitment to equality, and we need to address these differences to protect our nation's liberal principles.",
      "assistant",  "{\"1_lgbtq\": \"Yes\", \"2_evaluation_lgbtq\": \"positive\", \"3_immigration\": \"Yes\", \"4_evaluation_minority\": \"negative\", \"2_party\": \"Conservatives\"}",
      "user", "The Green Party is focused on addressing transgender rights, climate change and economic inequality.",
      "assistant", "{\"1_lgbtq\": \"No\", \"2_evaluation_lgbtq\": NA, \"3_immigration\": \"No\", \"4_evaluation_minority\": NA, \"5_party\": \"Green Party\"}",
      "user", t
    )
  })
}
```

I runt this on two paragraphs that were problematic with the previous attempts to see the output:

```{r}
c("Electra is a leading Northern Irish drag artist who sits on the board of The 343 and was embroiled in the McCausland saga last July. For her, the importance of the space for creatives and clientele who need it the most can’t be overstated. “The UK government is happy to cosy up to the DUP, a party that has restricted the rights of women and LGBTQ+ people for years,” she says. “The need for safe spaces for queer people and women is necessary in an environment that is so hostile towards its most vulnerable, especially when it comes from what’s left of our failed government.”",
  "The rights and wrongs of Muslim dress have not featured prominently in the former foreign secretary’s recent thinking. In Boris’s world, concerns pop up and down, like apples in a ducking bowl, only to emerge when convenient. Sometimes, they are lifted from the Davos globalisers’ checklist. He embraced girls’ education at the Foreign Office as his cause of choice, but let’s wait and see how much attention that gets from now on. He has supported a hard Brexit driven by fears of immigration, while as mayor deemed immigration a boon to London and recently challenged an amnesty for all illegal immigrants in the country for 10 years. To his credit, he voted in favour of many LGBT causes when traditional Tories were still grouchy on such issues.") |> 
  make_query() |> 
  query(screen = FALSE,
        model = "llama3.1:8b-instruct-q8_0", 
        # server = "http://192.168.2.29:11434/", 
        output = "text",
        # format = "json",
        model_params = list(seed = 41, temperature = 0)) |> 
  print()
```

Since this works well, I run this on the entire dataset:

```{r}
paragraphs_annotated <- paragraphs |> 
  mutate(
    query = make_query(txt = text),
    annotation = query(query, screen = FALSE,
                       model = "llama3.1:8b-instruct-q8_0", 
                       # server = "http://192.168.2.29:11434/", 
                       output = "text",
                       format = "json",
                       model_params = list(seed = 42, temperature = 0))
  )
```

I tidy this up a little for analysis:

```{r}
paragraphs_annotated_tidy <- paragraphs_annotated |> 
  mutate() |> 
  rowwise() |> 
  mutate(annotation = str_extract(annotation, "\\{.+?\\}"),
         annotation = list(jsonlite::fromJSON(annotation))) |> 
  unnest_wider(annotation)
```


# Wrap-up

Save this data

```{r}
saveRDS(paragraphs_annotated_tidy, "data/paragraphs_annotated_tidy.rds")
```

And export it for manual inspection:

```{r}
#| eval: false
paragraphs_annotated_tidy |> 
  select(-word, -set, -query) |> 
  rio::export("annotation.xlsx")
```

Afterwards we get some information which is important to reproduce the report.

```{r}
sessionInfo()
Sys.time()
# note how long the script takes to (re-)run
Sys.time() - start
```
